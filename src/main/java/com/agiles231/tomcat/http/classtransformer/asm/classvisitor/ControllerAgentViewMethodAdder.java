package com.agiles231.tomcat.http.classtransformer.asm.classvisitor;


import org.objectweb.asm.*;

/**
 * Adds 3 methods to visited class:
 * 1) Method for viewing all statistics reported to agent
 * 2) Method that generates form for viewing specific request/response
 * 3) Method for viewing specific request/response (picked in above form)
 */
public class ControllerAgentViewMethodAdder extends ClassVisitor implements Opcodes {
    String className;
    String path;
    public ControllerAgentViewMethodAdder(int api, ClassVisitor classVisitor, String path) {
        super(api, classVisitor);
        this.path = path;
    }

    @Override
    public void visit(int version, int access, String name, String signature, String superName, String[] interfaces) {
        super.visit(version, access, name, signature, superName, interfaces);
        this.className = name;
    }

    private String getViewAllName() {
        return "getTomcatAgentView";
    }
    @Override
    public void visitEnd() {
        // view all method
        MethodVisitor mv = super.visitMethod(ACC_PUBLIC, getViewAllName(), "()Ljava/lang/String;", "()Ljava/lang/String;", null);
        mv.visitAnnotationDefault();
        AnnotationVisitor requestMapping = mv.visitAnnotation("Lorg/springframework/web/bind/annotation/GetMapping;", true);
        AnnotationVisitor requestMappingValue = requestMapping.visitArray("value");
        requestMappingValue.visit(null, "/agent/stats");
        requestMappingValue.visitEnd();
        requestMapping.visitEnd();
        mv.visitCode();
        Label label0 = new Label();
        mv.visitLabel(label0);
        mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
        mv.visitInsn(DUP);
        mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        mv.visitVarInsn(ASTORE, 1);
        Label label1 = new Label();
        mv.visitLabel(label1);
        mv.visitMethodInsn(INVOKESTATIC, "com/agiles231/tomcat/http/agent/TomcatHttpMonitoringAgent", "getHttpRequestStarts", "()Ljava/util/Map;", false);
        mv.visitVarInsn(ASTORE, 2);
        Label label2 = new Label();
        mv.visitLabel(label2);
        mv.visitMethodInsn(INVOKESTATIC, "com/agiles231/tomcat/http/agent/TomcatHttpMonitoringAgent", "getHttpRequestEnds", "()Ljava/util/Map;", false);
        mv.visitVarInsn(ASTORE, 3);
        Label label3 = new Label();
        mv.visitLabel(label3);
        mv.visitMethodInsn(INVOKESTATIC, "com/agiles231/tomcat/http/agent/TomcatHttpMonitoringAgent", "getHttpResponseSizes", "()Ljava/util/Map;", false);
        mv.visitVarInsn(ASTORE, 4);
        Label label4 = new Label();
        mv.visitLabel(label4);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<html>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label5 = new Label();
        mv.visitLabel(label5);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<head>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label6 = new Label();
        mv.visitLabel(label6);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</head>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label7 = new Label();
        mv.visitLabel(label7);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<body>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label8 = new Label();
        mv.visitLabel(label8);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<table>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label9 = new Label();
        mv.visitLabel(label9);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label10 = new Label();
        mv.visitLabel(label10);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label11 = new Label();
        mv.visitLabel(label11);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("Id");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label12 = new Label();
        mv.visitLabel(label12);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label13 = new Label();
        mv.visitLabel(label13);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label14 = new Label();
        mv.visitLabel(label14);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("Start (epoch)");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label15 = new Label();
        mv.visitLabel(label15);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label16 = new Label();
        mv.visitLabel(label16);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label17 = new Label();
        mv.visitLabel(label17);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("End (epoch)");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label18 = new Label();
        mv.visitLabel(label18);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label19 = new Label();
        mv.visitLabel(label19);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label20 = new Label();
        mv.visitLabel(label20);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("Time taken (epoch)");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label21 = new Label();
        mv.visitLabel(label21);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label22 = new Label();
        mv.visitLabel(label22);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label23 = new Label();
        mv.visitLabel(label23);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("Size");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label24 = new Label();
        mv.visitLabel(label24);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label25 = new Label();
        mv.visitLabel(label25);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label26 = new Label();
        mv.visitLabel(label26);
        mv.visitVarInsn(ALOAD, 2);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "keySet", "()Ljava/util/Set;", true);
        mv.visitVarInsn(ASTORE, 5);
        Label label27 = new Label();
        mv.visitLabel(label27);
        mv.visitTypeInsn(NEW, "java/util/HashSet");
        mv.visitInsn(DUP);
        mv.visitMethodInsn(INVOKESPECIAL, "java/util/HashSet", "<init>", "()V", false);
        mv.visitVarInsn(ASTORE, 6);
        Label label28 = new Label();
        mv.visitLabel(label28);
        mv.visitTypeInsn(NEW, "java/util/HashSet");
        mv.visitInsn(DUP);
        mv.visitMethodInsn(INVOKESPECIAL, "java/util/HashSet", "<init>", "()V", false);
        mv.visitVarInsn(ASTORE, 7);
        Label label29 = new Label();
        mv.visitLabel(label29);
        mv.visitVarInsn(ALOAD, 5);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", true);
        mv.visitVarInsn(ASTORE, 8);
        Label label30 = new Label();
        mv.visitLabel(label30);
        mv.visitFrame(Opcodes.F_FULL, 9, new Object[] {className, "java/lang/StringBuilder", "java/util/Map", "java/util/Map", "java/util/Map", "java/util/Set", "java/util/Set", "java/util/Set", "java/util/Iterator"}, 0, new Object[] {});
        mv.visitVarInsn(ALOAD, 8);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
        Label label31 = new Label();
        mv.visitJumpInsn(IFEQ, label31);
        mv.visitVarInsn(ALOAD, 8);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
        mv.visitTypeInsn(CHECKCAST, "java/lang/Long");
        mv.visitVarInsn(ASTORE, 9);
        Label label32 = new Label();
        mv.visitLabel(label32);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label33 = new Label();
        mv.visitLabel(label33);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label34 = new Label();
        mv.visitLabel(label34);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitVarInsn(ALOAD, 9);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "toString", "()Ljava/lang/String;", false);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label35 = new Label();
        mv.visitLabel(label35);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label36 = new Label();
        mv.visitLabel(label36);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label37 = new Label();
        mv.visitLabel(label37);
        mv.visitVarInsn(ALOAD, 2);
        mv.visitVarInsn(ALOAD, 9);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
        mv.visitTypeInsn(CHECKCAST, "java/lang/Long");
        mv.visitVarInsn(ASTORE, 10);
        Label label38 = new Label();
        mv.visitLabel(label38);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitVarInsn(ALOAD, 10);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label39 = new Label();
        mv.visitLabel(label39);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label40 = new Label();
        mv.visitLabel(label40);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label41 = new Label();
        mv.visitLabel(label41);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitVarInsn(ALOAD, 9);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
        mv.visitTypeInsn(CHECKCAST, "java/lang/Long");
        mv.visitVarInsn(ASTORE, 11);
        Label label42 = new Label();
        mv.visitLabel(label42);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitVarInsn(ALOAD, 11);
        Label label43 = new Label();
        mv.visitJumpInsn(IFNONNULL, label43);
        mv.visitLdcInsn("");
        Label label44 = new Label();
        mv.visitJumpInsn(GOTO, label44);
        mv.visitLabel(label43);
        mv.visitFrame(Opcodes.F_FULL, 12, new Object[] {className, "java/lang/StringBuilder", "java/util/Map", "java/util/Map", "java/util/Map", "java/util/Set", "java/util/Set", "java/util/Set", "java/util/Iterator", "java/lang/Long", "java/lang/Long", "java/lang/Long"}, 1, new Object[] {"java/lang/StringBuilder"});
        mv.visitVarInsn(ALOAD, 11);
        mv.visitLabel(label44);
        mv.visitFrame(Opcodes.F_FULL, 12, new Object[] {className, "java/lang/StringBuilder", "java/util/Map", "java/util/Map", "java/util/Map", "java/util/Set", "java/util/Set", "java/util/Set", "java/util/Iterator", "java/lang/Long", "java/lang/Long", "java/lang/Long"}, 2, new Object[] {"java/lang/StringBuilder", "java/lang/Object"});
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label45 = new Label();
        mv.visitLabel(label45);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label46 = new Label();
        mv.visitLabel(label46);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label47 = new Label();
        mv.visitLabel(label47);
        mv.visitVarInsn(ALOAD, 11);
        Label label48 = new Label();
        mv.visitJumpInsn(IFNONNULL, label48);
        mv.visitInsn(ACONST_NULL);
        Label label49 = new Label();
        mv.visitJumpInsn(GOTO, label49);
        mv.visitLabel(label48);
        mv.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
        mv.visitVarInsn(ALOAD, 11);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "longValue", "()J", false);
        mv.visitVarInsn(ALOAD, 10);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "longValue", "()J", false);
        mv.visitInsn(LSUB);
        mv.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
        mv.visitLabel(label49);
        mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/Long"});
        mv.visitVarInsn(ASTORE, 12);
        Label label50 = new Label();
        mv.visitLabel(label50);
        mv.visitVarInsn(ALOAD, 12);
        Label label51 = new Label();
        mv.visitJumpInsn(IFNULL, label51);
        mv.visitVarInsn(ALOAD, 6);
        mv.visitVarInsn(ALOAD, 12);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "add", "(Ljava/lang/Object;)Z", true);
        mv.visitInsn(POP);
        mv.visitLabel(label51);
        mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/Long"}, 0, null);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitVarInsn(ALOAD, 12);
        Label label52 = new Label();
        mv.visitJumpInsn(IFNONNULL, label52);
        mv.visitLdcInsn("");
        Label label53 = new Label();
        mv.visitJumpInsn(GOTO, label53);
        mv.visitLabel(label52);
        mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/StringBuilder"});
        mv.visitVarInsn(ALOAD, 12);
        mv.visitLabel(label53);
        mv.visitFrame(Opcodes.F_FULL, 13, new Object[] {className, "java/lang/StringBuilder", "java/util/Map", "java/util/Map", "java/util/Map", "java/util/Set", "java/util/Set", "java/util/Set", "java/util/Iterator", "java/lang/Long", "java/lang/Long", "java/lang/Long", "java/lang/Long"}, 2, new Object[] {"java/lang/StringBuilder", "java/lang/Object"});
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label54 = new Label();
        mv.visitLabel(label54);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label55 = new Label();
        mv.visitLabel(label55);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label56 = new Label();
        mv.visitLabel(label56);
        mv.visitVarInsn(ALOAD, 4);
        mv.visitVarInsn(ALOAD, 9);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "get", "(Ljava/lang/Object;)Ljava/lang/Object;", true);
        mv.visitTypeInsn(CHECKCAST, "java/lang/Long");
        mv.visitVarInsn(ASTORE, 13);
        Label label57 = new Label();
        mv.visitLabel(label57);
        mv.visitVarInsn(ALOAD, 13);
        Label label58 = new Label();
        mv.visitJumpInsn(IFNULL, label58);
        mv.visitVarInsn(ALOAD, 7);
        mv.visitVarInsn(ALOAD, 13);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "add", "(Ljava/lang/Object;)Z", true);
        mv.visitInsn(POP);
        mv.visitLabel(label58);
        mv.visitFrame(Opcodes.F_APPEND,1, new Object[] {"java/lang/Long"}, 0, null);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitVarInsn(ALOAD, 13);
        Label label59 = new Label();
        mv.visitJumpInsn(IFNONNULL, label59);
        mv.visitLdcInsn("");
        Label label60 = new Label();
        mv.visitJumpInsn(GOTO, label60);
        mv.visitLabel(label59);
        mv.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[] {"java/lang/StringBuilder"});
        mv.visitVarInsn(ALOAD, 13);
        mv.visitLabel(label60);
        mv.visitFrame(Opcodes.F_FULL, 14, new Object[] {className, "java/lang/StringBuilder", "java/util/Map", "java/util/Map", "java/util/Map", "java/util/Set", "java/util/Set", "java/util/Set", "java/util/Iterator", "java/lang/Long", "java/lang/Long", "java/lang/Long", "java/lang/Long", "java/lang/Long"}, 2, new Object[] {"java/lang/StringBuilder", "java/lang/Object"});
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label61 = new Label();
        mv.visitLabel(label61);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label62 = new Label();
        mv.visitLabel(label62);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label63 = new Label();
        mv.visitLabel(label63);
        mv.visitJumpInsn(GOTO, label30);
        mv.visitLabel(label31);
        mv.visitFrame(Opcodes.F_FULL, 8, new Object[] {className, "java/lang/StringBuilder", "java/util/Map", "java/util/Map", "java/util/Map", "java/util/Set", "java/util/Set", "java/util/Set"}, 0, new Object[] {});
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</table>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label64 = new Label();
        mv.visitLabel(label64);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<table>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label65 = new Label();
        mv.visitLabel(label65);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label66 = new Label();
        mv.visitLabel(label66);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label67 = new Label();
        mv.visitLabel(label67);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("Analytic Stat");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label68 = new Label();
        mv.visitLabel(label68);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label69 = new Label();
        mv.visitLabel(label69);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label70 = new Label();
        mv.visitLabel(label70);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("Time");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label71 = new Label();
        mv.visitLabel(label71);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label72 = new Label();
        mv.visitLabel(label72);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label73 = new Label();
        mv.visitLabel(label73);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("Size");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label74 = new Label();
        mv.visitLabel(label74);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label75 = new Label();
        mv.visitLabel(label75);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label76 = new Label();
        mv.visitLabel(label76);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label77 = new Label();
        mv.visitLabel(label77);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label78 = new Label();
        mv.visitLabel(label78);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("Average");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label79 = new Label();
        mv.visitLabel(label79);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label80 = new Label();
        mv.visitLabel(label80);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label81 = new Label();
        mv.visitLabel(label81);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitVarInsn(ALOAD, 6);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "stream", "()Ljava/util/stream/Stream;", true);
        mv.visitInvokeDynamicInsn("applyAsLong", "()Ljava/util/function/ToLongFunction;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/LambdaMetafactory", "metafactory", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;", false), new Object[]{Type.getType("(Ljava/lang/Object;)J"), new Handle(Opcodes.H_INVOKEVIRTUAL, "java/lang/Long", "longValue", "()J", false), Type.getType("(Ljava/lang/Long;)J")});
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/stream/Stream", "mapToLong", "(Ljava/util/function/ToLongFunction;)Ljava/util/stream/LongStream;", true);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/stream/LongStream", "average", "()Ljava/util/OptionalDouble;", true);
        mv.visitInsn(DCONST_0);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/OptionalDouble", "orElse", "(D)D", false);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(D)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label82 = new Label();
        mv.visitLabel(label82);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label83 = new Label();
        mv.visitLabel(label83);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label84 = new Label();
        mv.visitLabel(label84);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitVarInsn(ALOAD, 7);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "stream", "()Ljava/util/stream/Stream;", true);
        mv.visitInvokeDynamicInsn("applyAsLong", "()Ljava/util/function/ToLongFunction;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/LambdaMetafactory", "metafactory", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;", false), new Object[]{Type.getType("(Ljava/lang/Object;)J"), new Handle(Opcodes.H_INVOKEVIRTUAL, "java/lang/Long", "longValue", "()J", false), Type.getType("(Ljava/lang/Long;)J")});
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/stream/Stream", "mapToLong", "(Ljava/util/function/ToLongFunction;)Ljava/util/stream/LongStream;", true);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/stream/LongStream", "average", "()Ljava/util/OptionalDouble;", true);
        mv.visitInsn(DCONST_0);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/util/OptionalDouble", "orElse", "(D)D", false);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(D)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label85 = new Label();
        mv.visitLabel(label85);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label86 = new Label();
        mv.visitLabel(label86);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label87 = new Label();
        mv.visitLabel(label87);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label88 = new Label();
        mv.visitLabel(label88);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label89 = new Label();
        mv.visitLabel(label89);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("Max");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label90 = new Label();
        mv.visitLabel(label90);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label91 = new Label();
        mv.visitLabel(label91);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label92 = new Label();
        mv.visitLabel(label92);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitVarInsn(ALOAD, 6);
        mv.visitMethodInsn(INVOKESTATIC, "java/util/Collections", "max", "(Ljava/util/Collection;)Ljava/lang/Object;", false);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label93 = new Label();
        mv.visitLabel(label93);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label94 = new Label();
        mv.visitLabel(label94);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label95 = new Label();
        mv.visitLabel(label95);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitVarInsn(ALOAD, 7);
        mv.visitMethodInsn(INVOKESTATIC, "java/util/Collections", "max", "(Ljava/util/Collection;)Ljava/lang/Object;", false);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label96 = new Label();
        mv.visitLabel(label96);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label97 = new Label();
        mv.visitLabel(label97);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label98 = new Label();
        mv.visitLabel(label98);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label99 = new Label();
        mv.visitLabel(label99);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label100 = new Label();
        mv.visitLabel(label100);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("Min");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label101 = new Label();
        mv.visitLabel(label101);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label102 = new Label();
        mv.visitLabel(label102);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label103 = new Label();
        mv.visitLabel(label103);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitVarInsn(ALOAD, 6);
        mv.visitMethodInsn(INVOKESTATIC, "java/util/Collections", "min", "(Ljava/util/Collection;)Ljava/lang/Object;", false);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label104 = new Label();
        mv.visitLabel(label104);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label105 = new Label();
        mv.visitLabel(label105);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label106 = new Label();
        mv.visitLabel(label106);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitVarInsn(ALOAD, 7);
        mv.visitMethodInsn(INVOKESTATIC, "java/util/Collections", "min", "(Ljava/util/Collection;)Ljava/lang/Object;", false);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label107 = new Label();
        mv.visitLabel(label107);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label108 = new Label();
        mv.visitLabel(label108);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label109 = new Label();
        mv.visitLabel(label109);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</table>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label110 = new Label();
        mv.visitLabel(label110);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</body>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label111 = new Label();
        mv.visitLabel(label111);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</html>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        Label label112 = new Label();
        mv.visitLabel(label112);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        mv.visitInsn(ARETURN);
        Label label113 = new Label();
        mv.visitLabel(label113);
        mv.visitLocalVariable("start", "Ljava/lang/Long;", null, label38, label63, 10);
        mv.visitLocalVariable("end", "Ljava/lang/Long;", null, label42, label63, 11);
        mv.visitLocalVariable("time", "Ljava/lang/Long;", null, label50, label63, 12);
        mv.visitLocalVariable("size", "Ljava/lang/Long;", null, label57, label63, 13);
        mv.visitLocalVariable("id", "Ljava/lang/Long;", null, label32, label63, 9);
        mv.visitLocalVariable("this", "L" + className + ";", null, label0, label113, 0);
        mv.visitLocalVariable("sb", "Ljava/lang/StringBuilder;", null, label1, label113, 1);
        mv.visitLocalVariable("requestStarts", "Ljava/util/Map;", "Ljava/util/Map<Ljava/lang/Long;Ljava/lang/Long;>;", label2, label113, 2);
        mv.visitLocalVariable("requestEnds", "Ljava/util/Map;", "Ljava/util/Map<Ljava/lang/Long;Ljava/lang/Long;>;", label3, label113, 3);
        mv.visitLocalVariable("responseSizes", "Ljava/util/Map;", "Ljava/util/Map<Ljava/lang/Long;Ljava/lang/Long;>;", label4, label113, 4);
        mv.visitLocalVariable("ids", "Ljava/util/Set;", "Ljava/util/Set<Ljava/lang/Long;>;", label27, label113, 5);
        mv.visitLocalVariable("times", "Ljava/util/Set;", "Ljava/util/Set<Ljava/lang/Long;>;", label28, label113, 6);
        mv.visitLocalVariable("sizes", "Ljava/util/Set;", "Ljava/util/Set<Ljava/lang/Long;>;", label29, label113, 7);
        mv.visitMaxs(4, 14);
        mv.visitEnd();


        // add the form view method
        mv = super.visitMethod(ACC_PUBLIC, "getForm", "()Ljava/lang/String;", "()Ljava/lang/String;", null);
        mv.visitAnnotationDefault();
        requestMapping = mv.visitAnnotation("Lorg/springframework/web/bind/annotation/GetMapping;", true);
        requestMappingValue = requestMapping.visitArray("value");
        requestMappingValue.visit(null, "/agent/select");
        requestMappingValue.visitEnd();
        requestMapping.visitEnd();
        mv.visitCode();
        label0 = new Label();
        mv.visitLabel(label0);
        mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
        mv.visitInsn(DUP);
        mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        mv.visitVarInsn(ASTORE, 1);
        label1 = new Label();
        mv.visitLabel(label1);
        mv.visitMethodInsn(INVOKESTATIC, "com/agiles231/tomcat/http/agent/TomcatHttpMonitoringAgent", "getHttpRequestStarts", "()Ljava/util/Map;", false);
        mv.visitVarInsn(ASTORE, 2);
        label2 = new Label();
        mv.visitLabel(label2);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<html>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        label3 = new Label();
        mv.visitLabel(label3);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<head>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        label4 = new Label();
        mv.visitLabel(label4);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</head>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<body>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<form action=\"/" + path + "agent/get\" method=\"post\">");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<span>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("Select Id: ");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<select name=\"id\">");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 2);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Map", "keySet", "()Ljava/util/Set;", true);
        mv.visitVarInsn(ASTORE, 3);
        label11 = new Label();
        mv.visitLabel(label11);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "iterator", "()Ljava/util/Iterator;", true);
        mv.visitVarInsn(ASTORE, 4);
        label12 = new Label();
        mv.visitLabel(label12);
        mv.visitFrame(Opcodes.F_FULL, 5, new Object[] {className, "java/lang/StringBuilder", "java/util/Map", "java/util/Set", "java/util/Iterator"}, 0, new Object[] {});
        mv.visitVarInsn(ALOAD, 4);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "hasNext", "()Z", true);
        label13 = new Label();
        mv.visitJumpInsn(IFEQ, label13);
        mv.visitVarInsn(ALOAD, 4);
        mv.visitMethodInsn(INVOKEINTERFACE, "java/util/Iterator", "next", "()Ljava/lang/Object;", true);
        mv.visitTypeInsn(CHECKCAST, "java/lang/Long");
        mv.visitVarInsn(ASTORE, 5);
        label14 = new Label();
        mv.visitLabel(label14);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
        mv.visitInsn(DUP);
        mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        mv.visitLdcInsn("<option value=\"");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitVarInsn(ALOAD, 5);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "toString", "()Ljava/lang/String;", false);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitLdcInsn("\">");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitVarInsn(ALOAD, 5);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "toString", "()Ljava/lang/String;", false);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitLdcInsn("</option>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        label15 = new Label();
        mv.visitLabel(label15);
        mv.visitJumpInsn(GOTO, label12);
        mv.visitLabel(label13);
        mv.visitFrame(Opcodes.F_CHOP,1, null, 0, null);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</select>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</span>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("<button type=\"submit\" value=\"Submit\">Submit</button>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</form>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</body>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitLdcInsn("</html>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 1);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        mv.visitInsn(ARETURN);
        label21 = new Label();
        mv.visitLabel(label21);
        mv.visitLocalVariable("id", "Ljava/lang/Long;", null, label14, label15, 5);
        mv.visitLocalVariable("this", "L" + className + ";", null, label0, label21, 0);
        mv.visitLocalVariable("sb", "Ljava/lang/StringBuilder;", null, label1, label21, 1);
        mv.visitLocalVariable("requestStarts", "Ljava/util/Map;", "Ljava/util/Map<Ljava/lang/Long;Ljava/lang/Long;>;", label2, label21, 2);
        mv.visitLocalVariable("ids", "Ljava/util/Set;", "Ljava/util/Set<Ljava/lang/Long;>;", label11, label21, 3);
        mv.visitMaxs(3, 6);
        mv.visitEnd();

        // getViewSingle method
        mv = super.visitMethod(ACC_PUBLIC, "getViewSingle", "(J)Ljava/lang/String;", null, null);
        requestMapping = mv.visitAnnotation("Lorg/springframework/web/bind/annotation/PostMapping;", true);
        requestMappingValue = requestMapping.visitArray("value");
        requestMappingValue.visit(null, "/agent/get");
        requestMappingValue.visitEnd();
        requestMapping.visitEnd();
        AnnotationVisitor requestParam = mv.visitParameterAnnotation(0, "Lorg/springframework/web/bind/annotation/RequestParam;", true);
        requestParam.visit("name", "id");
        requestParam.visitEnd();
        mv.visitCode();
        label0 = new Label();
        mv.visitLabel(label0);
        mv.visitTypeInsn(NEW, "java/lang/StringBuilder");
        mv.visitInsn(DUP);
        mv.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
        mv.visitVarInsn(ASTORE, 3);
        label1 = new Label();
        mv.visitLabel(label1);
        mv.visitVarInsn(LLOAD, 1);
        mv.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
        mv.visitMethodInsn(INVOKESTATIC, "com/agiles231/tomcat/http/agent/TomcatHttpMonitoringAgent", "getHttpRequestStart", "(Ljava/lang/Long;)Ljava/lang/Long;", false);
        mv.visitVarInsn(ASTORE, 4);
        label2 = new Label();
        mv.visitLabel(label2);
        mv.visitVarInsn(LLOAD, 1);
        mv.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
        mv.visitMethodInsn(INVOKESTATIC, "com/agiles231/tomcat/http/agent/TomcatHttpMonitoringAgent", "getHttpRequestEnd", "(Ljava/lang/Long;)Ljava/lang/Long;", false);
        mv.visitVarInsn(ASTORE, 5);
        label3 = new Label();
        mv.visitLabel(label3);
        mv.visitVarInsn(LLOAD, 1);
        mv.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
        mv.visitMethodInsn(INVOKESTATIC, "com/agiles231/tomcat/http/agent/TomcatHttpMonitoringAgent", "getHttpResponseSize", "(Ljava/lang/Long;)Ljava/lang/Long;", false);
        mv.visitVarInsn(ASTORE, 6);
        label4 = new Label();
        mv.visitLabel(label4);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<html>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<head>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</head>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<body>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<table>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("Id");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("Start (epoch)");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("End (epoch)");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("Time taken (ms)");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("Size");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</th>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitVarInsn(LLOAD, 1);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitVarInsn(ALOAD, 4);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitVarInsn(ALOAD, 5);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitVarInsn(ALOAD, 5);
        label38 = new Label();
        mv.visitJumpInsn(IFNONNULL, label38);
        mv.visitVarInsn(ALOAD, 4);
        label39 = new Label();
        mv.visitJumpInsn(GOTO, label39);
        mv.visitLabel(label38);
        mv.visitFrame(Opcodes.F_FULL, 6, new Object[] {className, Opcodes.LONG, "java/lang/StringBuilder", "java/lang/Long", "java/lang/Long", "java/lang/Long"}, 1, new Object[] {"java/lang/StringBuilder"});
        mv.visitVarInsn(ALOAD, 5);
        mv.visitLabel(label39);
        mv.visitFrame(Opcodes.F_FULL, 6, new Object[] {className, Opcodes.LONG, "java/lang/StringBuilder", "java/lang/Long", "java/lang/Long", "java/lang/Long"}, 2, new Object[] {"java/lang/StringBuilder", "java/lang/Long"});
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "longValue", "()J", false);
        mv.visitVarInsn(ALOAD, 4);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Long", "longValue", "()J", false);
        mv.visitInsn(LSUB);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(J)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("<td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitVarInsn(ALOAD, 6);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/Object;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</td>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</tr>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</table>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</body>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        label47 = new Label();
        mv.visitLabel(label47);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitLdcInsn("</html>");
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
        mv.visitInsn(POP);
        mv.visitVarInsn(ALOAD, 3);
        mv.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
        mv.visitInsn(ARETURN);
        label49 = new Label();
        mv.visitLabel(label49);
        mv.visitLocalVariable("this", "L" + className + ";", null, label0, label49, 0);
        mv.visitLocalVariable("id", "J", null, label0, label49, 1);
        mv.visitLocalVariable("sb", "Ljava/lang/StringBuilder;", null, label1, label49, 3);
        mv.visitLocalVariable("start", "Ljava/lang/Long;", null, label2, label49, 4);
        mv.visitLocalVariable("end", "Ljava/lang/Long;", null, label3, label49, 5);
        mv.visitLocalVariable("size", "Ljava/lang/Long;", null, label4, label49, 6);
        mv.visitMaxs(5, 7);
        mv.visitEnd();

        super.visitEnd();
    }
}
